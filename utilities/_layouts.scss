@import "../variables/spacing";
@import "../variables/breakpoints";
@import "../variables/colors";
@import "../mixins/layout";

$nav-width: 244px;
$layout-breakpoint: $screen-sm-min;

/*===================================== 2 COLUMN PAGE LAYOUT ==================================*/
// A container with max width, left nav column and fluid content column

.l-container {
  @include clearfix;
  @include l-container;
  padding-top: $spacing-md;
  padding-bottom: $spacing-md;
}

.l-nav {
  @include l-container-column($layout-breakpoint);
  display: none;
  @include media-query($layout-breakpoint) {
    display: block;
    width: $nav-width;
    margin-left: 0;
  }
}

.l-content {
  @include l-container-column($layout-breakpoint);
  margin-bottom: $column-gutter;
  @include media-query($layout-breakpoint) {
    width: calc(100% - #{$nav-width} - (#{$column-gutter} * 2));
    margin-right: 0;
  }
}

// extra narrower container
.l-container-narrow {
  @include clearfix;
  @include l-container-narrow;
  padding-top: $spacing-md;
  padding-bottom: $spacing-md;
}

/*======================================= HORIZONTAL LAYOUTS ==================================*/
// For laying out elements in a horizontal row with control of their proportional widths
// and vertical / horizontal alignment

.l-inline-parent {
  font-size: 0;
}

.l-vcenter-children {
  &:before {
    content: '';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
  }
}

.l-hcenter-children {
  text-align: center;
}

.l-nowrap-children {
  white-space: nowrap;
}

.l-inline-child {
  font-size: 1rem;
  display: inline-block;
}

.l-inline-child-valign-center {
  vertical-align: middle;
}

.l-inline-child-valign-top {
  vertical-align: top;
}

.l-hcentered {
  display: inline-block;
  margin-left: auto;
  margin-right: auto;
}

.l-width-25 {
  width: 25%;
}

.l-width-33 {
  width: 33.33333333333333%;
}

.l-push-10 {
  margin-left: 10%;
}

$screenWidths: sm md lg;
$percentages: 10 20 30 40 50 60 70 80 90;
$percentage-map: (
  10: 10%,
  20: 20%,
  30: 30%,
  40: 40%,
  50: 50%,
  60: 60%,
  70: 70%,
  80: 80%,
  90: 90%,
);
@each $percentage in $percentages {
  .l-width-#{$percentage} {
    width: map-get($percentage-map, $percentage);
  }
  @each $screenWidth in $screenWidths {
    .l-width-#{$screenWidth}-#{$percentage} {
      width: 100%;
      @include media-query('$screen-#{$screenWidth}-min') {
        width: map-get($percentage-map, $percentage);
      }
    }
  }
}

.l-align-center {
  text-align: center;
}

.l-align-right {
  text-align: right;
}

/*============================ LAYERING ONE CONTAINER OVER ANOTHER ==============================*/
.l-position-context {
  position: relative;
}

.l-overlay-top-center {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1;
}

.l-overlay-cover {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
}

/*===================================== OTHER UTILITIES ========================================*/
.l-full-height {
  min-height: 100%;
}

.l-auto-width {
  display: inline-block;
}